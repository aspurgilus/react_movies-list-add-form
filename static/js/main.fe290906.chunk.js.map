{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","errorTitle","errorImgUrl","errorImdbUrl","errorImdbId","changeTitle","event","setState","target","value","changeDescription","changeImgUrl","changeImdbUrl","changeImdbId","handleSubmit","preventDefault","pattern","test","props","onAdd","resetForm","this","onSubmit","htmlFor","type","name","id","placeholder","classNames","onChange","onClick","PureComponent","App","moviesFromServer","addMovie","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fe290906.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { PureComponent } from 'react';\n\ninterface Props {\n  onAdd: (movie: Movie) => void\n}\n\ninterface State {\n  title: string;\n  description: string;\n  imgUrl: string;\n  imdbUrl: string;\n  imdbId: string;\n  errorTitle: string;\n  errorImgUrl: string;\n  errorImdbUrl: string;\n  errorImdbId: string;\n}\n\nexport class NewMovie extends PureComponent<Props, State> {\n  state: State = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    errorTitle: '',\n    errorImgUrl: '',\n    errorImdbUrl: '',\n    errorImdbId: '',\n  };\n\n  changeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      title: event.target.value,\n      errorTitle: '',\n    });\n  };\n\n  changeDescription = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    this.setState({ description: event.target.value });\n  };\n\n  changeImgUrl = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      imgUrl: event.target.value,\n      errorImgUrl: '',\n    });\n  };\n\n  changeImdbUrl = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      imdbUrl: event.target.value,\n      errorImdbUrl: '',\n    });\n  };\n\n  changeImdbId = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      imdbId: event.target.value,\n      errorImdbId: '',\n    });\n  };\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const {\n      title, description, imgUrl, imdbUrl, imdbId,\n    } = this.state;\n\n    const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    if (!title) {\n      this.setState({ errorTitle: 'Please, set the correct title' });\n\n      return;\n    }\n\n    if (!imgUrl || !pattern.test(imgUrl)) {\n      this.setState({ errorImgUrl: 'Please, set the correct image url' });\n\n      return;\n    }\n\n    if (!imdbUrl || !pattern.test(imdbUrl)) {\n      this.setState({ errorImdbUrl: 'Please, set the correct imdb url' });\n\n      return;\n    }\n\n    if (!imdbId) {\n      this.setState({ errorImdbId: 'Please, set the correct imdb id' });\n\n      return;\n    }\n\n    this.props.onAdd({\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    });\n\n    this.resetForm();\n  };\n\n  resetForm = () => this.setState({\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  });\n\n  render() {\n    const {\n      title, description, imgUrl, imdbUrl, imdbId,\n      errorTitle, errorImgUrl, errorImdbUrl, errorImdbId,\n    } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"field\">\n          <label htmlFor=\"title\" className=\"label\">\n            Title\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                name=\"title\"\n                id=\"title\"\n                placeholder=\"Set the title\"\n                className={classNames('input', { 'is-danger': errorTitle })}\n                value={title}\n                onChange={this.changeTitle}\n              />\n            </div>\n          </label>\n          {errorTitle && (<p className=\"help is-danger\">{errorTitle}</p>)}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"description\" className=\"label\">\n            Description\n            <div className=\"control\">\n              <textarea\n                name=\"description\"\n                id=\"description\"\n                placeholder=\"Put the description of the movie\"\n                className=\"textarea\"\n                value={description}\n                onChange={this.changeDescription}\n              />\n            </div>\n          </label>\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"imgUrl\" className=\"label\">\n            Image Url\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                name=\"imgUrl\"\n                id=\"imgUrl\"\n                placeholder=\"Set the image url\"\n                className={classNames('input', { 'is-danger': errorImgUrl })}\n                value={imgUrl}\n                onChange={this.changeImgUrl}\n              />\n            </div>\n          </label>\n          {errorImgUrl && (<p className=\"help is-danger\">{errorImgUrl}</p>)}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"imdbUrl\" className=\"label\">\n            Imdb Url\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                name=\"imdbUrl\"\n                id=\"imdbUrl\"\n                placeholder=\"Set the imdb url\"\n                className={classNames('input', { 'is-danger': errorImdbUrl })}\n                value={imdbUrl}\n                onChange={this.changeImdbUrl}\n              />\n            </div>\n          </label>\n          {errorImdbUrl && (<p className=\"help is-danger\">{errorImdbUrl}</p>)}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"imdbId\" className=\"label\">\n            Imdb Id\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                name=\"imdbId\"\n                id=\"imdbId\"\n                placeholder=\"Set the imdb id\"\n                className={classNames('input', { 'is-danger': errorImdbId })}\n                value={imdbId}\n                onChange={this.changeImdbId}\n              />\n            </div>\n          </label>\n          {errorImdbId && (<p className=\"help is-danger\">{errorImdbId}</p>)}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button type=\"submit\" className=\"button is-link\">Add</button>\n          </div>\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-link is-light\"\n              onClick={this.resetForm}\n            >\n              Cancel\n            </button>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState(({ movies }) => this.setState({\n      movies: [...movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}