{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextareaInput/TextareaInput.tsx","components/TextInput/TextInput.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","TextareaInput","memo","name","label","inputValue","placeholder","onChange","htmlFor","id","value","TextInput","errorMessage","type","classNames","NewMovie","onAdd","useState","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","errors","setErrors","setFormField","useMemo","handleChange","event","target","Object","prototype","hasOwnProperty","call","state","resetForm","keys","forEach","key","onSubmit","preventDefault","pattern","test","onClick","App","moviesFromServer","addMovie","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"mxEAKaA,EAA6B,SAAC,GAAD,IACxCC,EADwC,EACxCA,MAAOC,EADiC,EACjCA,YAAaC,EADoB,EACpBA,OAAQC,EADY,EACZA,QADY,OAGxC,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKH,EACLI,IAAI,kBAIV,sBAAKF,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJC,IAAI,aAIV,qBAAKF,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BJ,SAI/B,sBAAKI,UAAU,UAAf,UACGH,EACD,uBACA,mBAAGM,KAAMJ,EAAT,4BC1BKK,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKL,UAAU,SAAf,SACGK,EAAOC,KAAI,SAAAC,GAAK,OACf,cAAC,EAAD,eAAkCA,GAAlBA,EAAMC,c,cCFfC,EAA2BC,gBAAK,YAEtC,IADLC,EACI,EADJA,KAAMC,EACF,EADEA,MAAOC,EACT,EADSA,WAAYC,EACrB,EADqBA,YAAaC,EAClC,EADkCA,SAEtC,OACE,qBAAKf,UAAU,QAAf,SACE,wBAAOgB,QAASL,EAAMX,UAAU,QAAhC,UACGY,EACD,qBAAKZ,UAAU,UAAf,SACE,0BACEW,KAAMA,EACNM,GAAIN,EACJG,YAAaA,EACbd,UAAU,WACVkB,MAAOL,EACPE,SAAUA,c,iBCZTI,EAAuBT,gBAAK,YAElC,IADLC,EACI,EADJA,KAAMC,EACF,EADEA,MAAOC,EACT,EADSA,WAAYO,EACrB,EADqBA,aAAcN,EACnC,EADmCA,YAAaC,EAChD,EADgDA,SAEpD,OACE,sBAAKf,UAAU,QAAf,UACE,wBAAOgB,QAASL,EAAMX,UAAU,QAAhC,UACGY,EACD,qBAAKZ,UAAU,UAAf,SACE,uBACEqB,KAAK,OACLV,KAAMA,EACNM,GAAIN,EACJG,YAAaA,EACbd,UAAWsB,IAAW,QAAS,CAAE,YAAaF,IAC9CF,MAAOL,EACPE,SAAUA,SAIfK,GAAiB,mBAAGpB,UAAU,iBAAb,SAA+BoB,UCZ1CG,EAAsB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACpC,EAA0BC,mBAAS,IAAnC,mBAAO7B,EAAP,KAAc8B,EAAd,KACA,EAAsCD,mBAAS,IAA/C,mBAAO5B,EAAP,KAAoB8B,EAApB,KACA,EAA4BF,mBAAS,IAArC,mBAAO3B,EAAP,KAAe8B,EAAf,KACA,EAA8BH,mBAAS,IAAvC,mBAAO1B,EAAP,KAAgB8B,EAAhB,KACA,EAA4BJ,mBAAS,IAArC,mBAAOjB,EAAP,KAAesB,EAAf,KAEA,EAA4BL,oBAAS,iBAAe,CAClD7B,MAAO,GACPE,OAAQ,GACRC,QAAS,GACTS,OAAQ,OAJV,mBAAOuB,EAAP,KAAeC,EAAf,KAOMC,EAAgCC,mBAAQ,iBAAO,CACnDtC,MAAO8B,EACP7B,YAAa8B,EACbnB,OAAQsB,EACR/B,QAAS8B,EACT/B,OAAQ8B,KACN,IAEEO,EAAe,SAACC,GACpB,MAAwBA,EAAMC,OAAtB1B,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MAEVoB,OAAOC,UAAUC,eAAeC,KAAKR,EAActB,IACrDsB,EAAatB,GAAMO,GAGrBc,GAAU,SAAAU,GAAK,kCACVA,GADU,kBAEZ/B,EAAO,SAINgC,EAAY,WAChBL,OAAOM,KAAKX,GAAcY,SAAQ,SAAAC,GAAG,OAAIb,EAAaa,GAAK,QAuD7D,OACE,uBAAMC,SArDa,SAACX,GACpBA,EAAMY,iBAEN,IAAMC,EAAU,qKAEXrD,EASAE,GAAWmD,EAAQC,KAAKpD,GASxBC,GAAYkD,EAAQC,KAAKnD,GASzBS,GASLgB,EAAM,CACJ5B,QACAC,cACAC,SACAC,UACAS,WAGFmC,KAhBEX,GAAU,SAAAU,GAAK,kCACVA,GADU,IAEblC,OAAQ,uCAXVwB,GAAU,SAAAU,GAAK,kCACVA,GADU,IAEb3C,QAAS,wCAXXiC,GAAU,SAAAU,GAAK,kCACVA,GADU,IAEb5C,OAAQ,yCAXVkC,GAAU,SAAAU,GAAK,kCACVA,GADU,IAEb9C,MAAO,sCA6CX,UACE,cAACuB,EAAD,CACER,KAAK,QACLC,MAAM,QACNC,WAAYjB,EACZwB,aAAcW,EAAOnC,MACrBkB,YAAY,gBACZC,SAAUoB,IAGZ,cAAC1B,EAAD,CACEE,KAAK,cACLC,MAAM,cACNC,WAAYhB,EACZiB,YAAY,sBACZC,SAAUoB,IAGZ,cAAChB,EAAD,CACER,KAAK,SACLC,MAAM,YACNC,WAAYf,EACZsB,aAAcW,EAAOjC,OACrBgB,YAAY,oBACZC,SAAUoB,IAGZ,cAAChB,EAAD,CACER,KAAK,UACLC,MAAM,WACNC,WAAYd,EACZqB,aAAcW,EAAOhC,QACrBe,YAAY,mBACZC,SAAUoB,IAGZ,cAAChB,EAAD,CACER,KAAK,SACLC,MAAM,UACNC,WAAYL,EACZY,aAAcW,EAAOvB,OACrBM,YAAY,kBACZC,SAAUoB,IAGZ,sBAAKnC,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBAAQqB,KAAK,SAASrB,UAAU,iBAAhC,mBAEF,qBAAKA,UAAU,UAAf,SACE,wBACEqB,KAAK,SACLrB,UAAU,0BACVmD,QAASR,EAHX,6B,QCvJGS,EAAb,4MACEV,MAAe,CACbrC,OAAQgD,GAFZ,EAKEC,SAAW,SAAC/C,GACV,EAAKgD,UAAS,gBAAGlD,EAAH,EAAGA,OAAH,OAAgB,EAAKkD,SAAS,CAC1ClD,OAAO,GAAD,mBAAMA,GAAN,CAAcE,UAP1B,4CAWE,WACE,IAAQF,EAAWmD,KAAKd,MAAhBrC,OAER,OACE,sBAAKL,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYK,OAAQA,MAEtB,qBAAKL,UAAU,UAAf,SACE,cAAC,EAAD,CAAUwB,MAAOgC,KAAKF,oBApBhC,GAAyBG,IAAMC,WCN/BC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.cd97ac1a.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { FC, memo } from 'react';\n\ninterface Props {\n  name: string,\n  label: string,\n  inputValue: string,\n  placeholder: string,\n  onChange: (event: React.ChangeEvent<HTMLTextAreaElement>) => void\n}\n\nexport const TextareaInput: FC<Props> = memo(({\n  name, label, inputValue, placeholder, onChange,\n}) => {\n  return (\n    <div className=\"field\">\n      <label htmlFor={name} className=\"label\">\n        {label}\n        <div className=\"control\">\n          <textarea\n            name={name}\n            id={name}\n            placeholder={placeholder}\n            className=\"textarea\"\n            value={inputValue}\n            onChange={onChange}\n          />\n        </div>\n      </label>\n    </div>\n  );\n});\n","import React, { FC, memo } from 'react';\nimport classNames from 'classnames';\n\ninterface Props {\n  name: string,\n  label: string,\n  inputValue: string,\n  errorMessage: string,\n  placeholder: string,\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void\n}\n\nexport const TextInput: FC<Props> = memo(({\n  name, label, inputValue, errorMessage, placeholder, onChange,\n}) => {\n  return (\n    <div className=\"field\">\n      <label htmlFor={name} className=\"label\">\n        {label}\n        <div className=\"control\">\n          <input\n            type=\"text\"\n            name={name}\n            id={name}\n            placeholder={placeholder}\n            className={classNames('input', { 'is-danger': errorMessage })}\n            value={inputValue}\n            onChange={onChange}\n          />\n        </div>\n      </label>\n      {errorMessage && (<p className=\"help is-danger\">{errorMessage}</p>)}\n    </div>\n  );\n});\n","import React, { FC, useState, useMemo } from 'react';\nimport { TextareaInput } from '../TextareaInput/TextareaInput';\nimport { TextInput } from '../TextInput/TextInput';\n\ninterface Props {\n  onAdd: (movie: Movie) => void\n}\n\ninterface Errors {\n  title: string,\n  imgUrl: string,\n  imdbUrl: string,\n  imdbId: string\n}\n\ninterface FormFieldSetter {\n  [key: string]: React.Dispatch<React.SetStateAction<string>>\n}\n\nexport const NewMovie: FC<Props> = ({ onAdd }) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n\n  const [errors, setErrors] = useState((): Errors => ({\n    title: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  }));\n\n  const setFormField: FormFieldSetter = useMemo(() => ({\n    title: setTitle,\n    description: setDescription,\n    imdbId: setImdbId,\n    imdbUrl: setImdbUrl,\n    imgUrl: setImgUrl,\n  }), []);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = event.target;\n\n    if (Object.prototype.hasOwnProperty.call(setFormField, name)) {\n      setFormField[name](value);\n    }\n\n    setErrors(state => ({\n      ...state,\n      [name]: '',\n    }));\n  };\n\n  const resetForm = () => {\n    Object.keys(setFormField).forEach(key => setFormField[key](''));\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    if (!title) {\n      setErrors(state => ({\n        ...state,\n        title: 'Please, set the correct title',\n      }));\n\n      return;\n    }\n\n    if (!imgUrl || !pattern.test(imgUrl)) {\n      setErrors(state => ({\n        ...state,\n        imgUrl: 'Please, set the correct image url',\n      }));\n\n      return;\n    }\n\n    if (!imdbUrl || !pattern.test(imdbUrl)) {\n      setErrors(state => ({\n        ...state,\n        imdbUrl: 'Please, set the correct imdb url',\n      }));\n\n      return;\n    }\n\n    if (!imdbId) {\n      setErrors(state => ({\n        ...state,\n        imdbId: 'Please, set the correct imdb id',\n      }));\n\n      return;\n    }\n\n    onAdd({\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    });\n\n    resetForm();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <TextInput\n        name=\"title\"\n        label=\"Title\"\n        inputValue={title}\n        errorMessage={errors.title}\n        placeholder=\"Set the title\"\n        onChange={handleChange}\n      />\n\n      <TextareaInput\n        name=\"description\"\n        label=\"Description\"\n        inputValue={description}\n        placeholder=\"Set the description\"\n        onChange={handleChange}\n      />\n\n      <TextInput\n        name=\"imgUrl\"\n        label=\"Image url\"\n        inputValue={imgUrl}\n        errorMessage={errors.imgUrl}\n        placeholder=\"Set the image url\"\n        onChange={handleChange}\n      />\n\n      <TextInput\n        name=\"imdbUrl\"\n        label=\"Imdb Url\"\n        inputValue={imdbUrl}\n        errorMessage={errors.imdbUrl}\n        placeholder=\"Set the imdb url\"\n        onChange={handleChange}\n      />\n\n      <TextInput\n        name=\"imdbId\"\n        label=\"Imdb Id\"\n        inputValue={imdbId}\n        errorMessage={errors.imdbId}\n        placeholder=\"Set the imdb id\"\n        onChange={handleChange}\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button type=\"submit\" className=\"button is-link\">Add</button>\n        </div>\n        <div className=\"control\">\n          <button\n            type=\"button\"\n            className=\"button is-link is-light\"\n            onClick={resetForm}\n          >\n            Cancel\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState(({ movies }) => this.setState({\n      movies: [...movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}