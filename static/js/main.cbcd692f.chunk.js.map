{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","onAdd","useState","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","errors","setErrors","formFieldSetters","useMemo","handleChange","event","target","name","value","Object","prototype","hasOwnProperty","call","resetForm","keys","forEach","key","onSubmit","preventDefault","pattern","test","state","htmlFor","type","id","placeholder","classNames","onChange","onClick","App","moviesFromServer","addMovie","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cbcd692f.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { FC, useState, useMemo } from 'react';\n\ninterface Props {\n  onAdd: (movie: Movie) => void\n}\n\ninterface Errors {\n  title: string,\n  imgUrl: string,\n  imdbUrl: string,\n  imdbId: string\n}\n\ninterface LinkedSetter {\n  [key: string]: React.Dispatch<React.SetStateAction<string>>\n}\n\nexport const NewMovie: FC<Props> = ({ onAdd }) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n\n  const [errors, setErrors] = useState((): Errors => ({\n    title: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  }));\n\n  const formFieldSetters: LinkedSetter = useMemo(() => ({\n    title: setTitle,\n    description: setDescription,\n    imdbId: setImdbId,\n    imdbUrl: setImdbUrl,\n    imgUrl: setImgUrl,\n  }), []);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = event.target;\n\n    if (Object.prototype.hasOwnProperty.call(formFieldSetters, name)) {\n      formFieldSetters[name](value);\n    }\n  };\n\n  const resetForm = () => {\n    Object.keys(formFieldSetters).forEach(key => formFieldSetters[key](''));\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    if (!title) {\n      setErrors(state => ({\n        ...state,\n        title: 'Please, set the correct title',\n      }));\n\n      return;\n    }\n\n    if (!imgUrl || !pattern.test(imgUrl)) {\n      setErrors(state => ({\n        ...state,\n        imgUrl: 'Please, set the correct image url',\n      }));\n\n      return;\n    }\n\n    if (!imdbUrl || !pattern.test(imdbUrl)) {\n      setErrors(state => ({\n        ...state,\n        imdbUrl: 'Please, set the correct imdb url',\n      }));\n\n      return;\n    }\n\n    if (!imdbId) {\n      setErrors(state => ({\n        ...state,\n        imdbId: 'Please, set the correct imdb id',\n      }));\n\n      return;\n    }\n\n    onAdd({\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    });\n\n    resetForm();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"field\">\n        <label htmlFor=\"title\" className=\"label\">\n          Title\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              name=\"title\"\n              id=\"title\"\n              placeholder=\"Set the title\"\n              className={classNames('input', { 'is-danger': errors.title })}\n              value={title}\n              onChange={handleChange}\n            />\n          </div>\n        </label>\n        {errors.title && (<p className=\"help is-danger\">{errors.title}</p>)}\n      </div>\n\n      <div className=\"field\">\n        <label htmlFor=\"description\" className=\"label\">\n          Description\n          <div className=\"control\">\n            <textarea\n              name=\"description\"\n              id=\"description\"\n              placeholder=\"Put the description of the movie\"\n              className=\"textarea\"\n              value={description}\n              onChange={handleChange}\n            />\n          </div>\n        </label>\n      </div>\n\n      <div className=\"field\">\n        <label htmlFor=\"imgUrl\" className=\"label\">\n          Image Url\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              name=\"imgUrl\"\n              id=\"imgUrl\"\n              placeholder=\"Set the image url\"\n              className={classNames('input', { 'is-danger': errors.imgUrl })}\n              value={imgUrl}\n              onChange={handleChange}\n            />\n          </div>\n        </label>\n        {errors.imgUrl && (<p className=\"help is-danger\">{errors.imgUrl}</p>)}\n      </div>\n\n      <div className=\"field\">\n        <label htmlFor=\"imdbUrl\" className=\"label\">\n          Imdb Url\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              name=\"imdbUrl\"\n              id=\"imdbUrl\"\n              placeholder=\"Set the imdb url\"\n              className={classNames('input', { 'is-danger': errors.imdbUrl })}\n              value={imdbUrl}\n              onChange={handleChange}\n            />\n          </div>\n        </label>\n        {errors.imdbUrl && (<p className=\"help is-danger\">{errors.imdbUrl}</p>)}\n      </div>\n\n      <div className=\"field\">\n        <label htmlFor=\"imdbId\" className=\"label\">\n          Imdb Id\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              name=\"imdbId\"\n              id=\"imdbId\"\n              placeholder=\"Set the imdb id\"\n              className={classNames('input', { 'is-danger': errors.imdbId })}\n              value={imdbId}\n              onChange={handleChange}\n            />\n          </div>\n        </label>\n        {errors.imdbId && (<p className=\"help is-danger\">{errors.imdbId}</p>)}\n      </div>\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button type=\"submit\" className=\"button is-link\">Add</button>\n        </div>\n        <div className=\"control\">\n          <button\n            type=\"button\"\n            className=\"button is-link is-light\"\n            onClick={resetForm}\n          >\n            Cancel\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState(({ movies }) => this.setState({\n      movies: [...movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}